{"version":3,"sources":["webpack:///./src/pages/faq.js"],"names":["FAQ","props","location"],"mappings":"4FAAA,4CA6FeA,UA1FH,SAAAC,GAAK,OACf,kBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,mCACA,4BACE,4BACE,uEADF,2IAKA,4BACE,4EADF,2GAIE,6BAJF,kFAOE,6BACA,6BARF,+HAWE,6BAXF,gEAaE,6BAbF,8CAgBA,4BACE,4EADF,mFAGY,6BAHZ,gGAOA,4BACE,wGADF,wEAME,6BANF,wGAUA,4BACE,yJADF,iFAOE,6BAPF,gHAUE,8BAEF,4BACE,6EADF,4DAGE,6BAHF,6FAMA,4BACE,oEADF,2EAE2E,IACzE,6BAHF,4DAI2D,6BAJ3D,qEAME,6BANF,kGASE,6BATF,oGAWkC,6BAXlC,IAWyC,6BAXzC,uJAgBA,4BACE,4EADF,oJAKE,6BALF,mIAQE","file":"component---src-pages-faq-js-62ca5495b70955a7dc74.js","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/Layout'\r\n\r\nconst FAQ = props => (\r\n  <Layout location={props.location}>\r\n    <h1>FAQ</h1>\r\n    <ul>\r\n      <li>\r\n        <h3>Q: Is this library considered finished?</h3>\r\n        The library is still in early development, but over the last year the\r\n        API has been getting more stable and version 1.0 is not that far.\r\n      </li>\r\n      <li>\r\n        <h3>Q: What are the future goals of the library?</h3>\r\n        The library's overall goals are to continue bringing popular patterns\r\n        from FP languages into TypeScript.\r\n        <br />\r\n        Here's a preview on what's currently being worked on and when to\r\n        anticipate it:\r\n        <br />\r\n        <br />\r\n        0.15 - EitherAsync/MaybeAsync improvements. Also hopefully bringing even\r\n        more typesafe versions of existing JavaScript APIs.\r\n        <br />\r\n        0.16 - Data structures? Zipper is very likely to be included.\r\n        <br />\r\n        Future / To research - Parser combinators?\r\n      </li>\r\n      <li>\r\n        <h3>Q: How are new features decided and planned?</h3>\r\n        Most of the development stems from dogfooding the library in personal\r\n        projects. <br />\r\n        User feedback is also extremely important - check out the question at\r\n        the bottom to see why.\r\n      </li>\r\n      <li>\r\n        <h3>\r\n          Q: Is this library intended to be used on the front-end or the\r\n          back-end?\r\n        </h3>\r\n        Purify is intended to be used both on the front-end and the back-end.\r\n        <br />\r\n        Everything from the build config to the API choices and features\r\n        included is made with this in mind.\r\n      </li>\r\n      <li>\r\n        <h3>\r\n          Q: Is this library intended to be part of an ecosystem of likeminded\r\n          libraries or handle additional functionality itself?\r\n        </h3>\r\n        Purify is intented to be a single library with a focus on general\r\n        purpose API.\r\n        <br />\r\n        Bindings to popular libraries like React, Angular, Express etc. are not\r\n        planned and most likely won't happen.\r\n        <br />\r\n      </li>\r\n      <li>\r\n        <h3>Q: What is the timeline for the new releases?</h3>\r\n        There are no exact dates for upcoming versions of Purify.\r\n        <br />I try to release a new version every couple of months, but there's\r\n        no guarantee for that.\r\n      </li>\r\n      <li>\r\n        <h3>Q: Should I expect breaking changes?</h3>\r\n        The library is in pre-v1 stage, breaking changes are certainly possible.{' '}\r\n        <br />\r\n        Situations in which you can expect breaking changes are: <br />\r\n        There is a new TypeScript release that allows for more type safety\r\n        <br />\r\n        There is a new TypeScript release that makes expressing certain\r\n        constructs (like HKTs) possible\r\n        <br />\r\n        ECMAScript proposals that allow for a more elegant API (like the\r\n        pipeline operator) reach stage 3<br /> <br />\r\n        TL;DR - Breaking changes will be rare, but if the language evolves in a\r\n        way that makes FP code easier to write then there will be changes for\r\n        sure.\r\n      </li>\r\n      <li>\r\n        <h3>Q: What should future contributors focus on?</h3>\r\n        Pull request for bugfixes or documentation improvements are always\r\n        welcome, but trying to add new methods via a PR most likely won't be\r\n        accepted.\r\n        <br />\r\n        Sharing use cases or pain points are the fastest way to see something\r\n        implemented in the library and I'll greatly appreciate it.\r\n        <br />\r\n      </li>\r\n    </ul>\r\n  </Layout>\r\n)\r\n\r\nexport default FAQ\r\n"],"sourceRoot":""}