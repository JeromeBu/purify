(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"6AtP":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),i=a.n(n),r=a("9ObM"),o=a("+ZDr"),s=a.n(o),l=a("7oih"),c=a("raZg"),d=a.n(c),h=a("EtlA"),u=a.n(h),m=a("M5kH"),p=r.b.h1.withConfig({displayName:"sc-015__Title",componentId:"sc-15i002i-0"})(["margin-bottom:0;"]),E=r.b.div.withConfig({displayName:"sc-015__Subtitle",componentId:"sc-15i002i-1"})(["padding-bottom:30px;"]),w=r.b.h2.withConfig({displayName:"sc-015__Topic",componentId:"sc-15i002i-2"})(["font-weight:normal;"]),g=r.b.div.withConfig({displayName:"sc-015__TopicDescription",componentId:"sc-15i002i-3"})(["padding-right:15%;@media only screen and (max-width:768px){padding-right:0;}"]);t.default=function(e){return i.a.createElement(l.a,{location:e.location},i.a.createElement(p,null,"Purify v0.15"),i.a.createElement(E,null,"April 30, 2020"),i.a.createElement("div",null,"Not sure what purify is? Check out the"," ",i.a.createElement(s.a,{to:"/getting-started"},"Getting Started")," page. Also check out the ",i.a.createElement(s.a,{to:"/faq"},"FAQ")," page!",i.a.createElement("br",null)),i.a.createElement(w,null,i.a.createElement("span",{style:{color:"#d22626"}},"Breaking change")," inside Codec"),i.a.createElement(g,null,i.a.createElement(s.a,{to:"/util/Codec"},"Codec")," had a ",i.a.createElement(m.a,null,"undefinedType")," codec which was insufficient as there was no way to create optional properties on an object.",i.a.createElement("br",null),"This was brought up in an issue and to resolve this I removed this codec in favor of a ",i.a.createElement(m.a,null,"optional")," combinator, please check out"," ",i.a.createElement(s.a,{to:"/utils/Codec#optional"},"the docs")," on how to use it."),i.a.createElement(w,null,"An updated Either/MaybeAsync API"),i.a.createElement(g,null,"When I first started designing the API for Either and MaybeAsync I wanted to bring the ease of use of proper error handling within IO, just like it is in languages with do-notation and for-comprehensions.",i.a.createElement("br",null)," That's why the original API in version"," ",i.a.createElement(s.a,{to:"/changelog/0.12"},"0.12")," only worked with async/await and I thought and this will be enough for most people.",i.a.createElement("br",null),'Turns out most people started creating wrappers to make it more chainable and issues started piling in GitHub, no one liked the "imperative" API.',i.a.createElement("br",null),"That's why I decided to spend some time brainstorming a new API, that didn't force people to use async/await, and this is the result:",i.a.createElement(d.a,{language:"javascript",style:u.a},"// async/await\nconst deleteUser = (req) =>\n    EitherAsync(async ({ liftEither, fromPromise, throwE }) => {\n       const request  = await liftEither(validateRequest(req))\n\n       try {\n           const user = await fromPromise(getUser(request.userId))\n       } catch {\n           throwE(Error.UserDoesNotExist)\n       }\n\n       return deleteUserDb(user)\n    })"),i.a.createElement(d.a,{language:"javascript",style:u.a},"// new API\nconst deleteUser = (req) =>\n    liftEither(validateRequest(req))\n        .chain(request => fromPromise(() => getUser(request.userId)))\n        .mapLeft(_     => Error.UserDoesNotExist)\n        .chain(user    => liftPromise(() => deleteUserDb(user)))"),"This is stripped down version of the code, just to demonstrate the similarities, for the full version check out the updated documentation of"," ",i.a.createElement(s.a,{to:"/adts/EitherAsync"},"EitherAsync")," and"," ",i.a.createElement(s.a,{to:"/adts/MaybeAsync"},"MaybeAsync"),".",i.a.createElement("br",null),"Both APIs will exist simultaneously and you're free to use whichever you like, much like how you can use both async/await and Promise.then."),i.a.createElement(w,null,"Other changes"),i.a.createElement(g,null,i.a.createElement("ul",null,i.a.createElement("li",null,"Added a new ",i.a.createElement(m.a,null,"Either#swap")," method"))))}}}]);
//# sourceMappingURL=component---src-pages-changelog-0-15-js-c7e84ff2c31cb46c7a5b.js.map